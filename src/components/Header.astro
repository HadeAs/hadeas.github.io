---
import { getCollection } from "astro:content";
import { SITE_METADATA, NAVIGATION } from "@/consts";
import HeaderLink from "./HeaderLink.astro";
import Logo from "./Logo.astro";
import MobileNav from "./MobileNav.astro";
import ThemeSwitcher from "./ThemeSwitcher.astro";
import SearchButton from "./SearchButton.astro";
import SearchResult from "./SearchResult.astro";
import { excludeDrafts, sortBlogPosts } from "@/functions";

// Retrieve all published articles
const posts = await getCollection("blog", excludeDrafts).then(sortBlogPosts);

// List of items to search in
const searchList = posts.map(({ data, slug }) => ({
  title: data.title,
  summary: data.summary,
  data,
  slug,
}));
---

<header class="flex items-center justify-between py-10">
  <div>
    <a href="/" aria-label={SITE_METADATA.headerTitle}>
      <div class="flex items-center justify-between">
        <div class="mr-3">
          <Logo />
        </div>
        {
          typeof SITE_METADATA.headerTitle === "string" ? (
            <div class="hidden h-6 text-2xl font-semibold sm:block">
              {SITE_METADATA.headerTitle}
            </div>
          ) : (
            SITE_METADATA.headerTitle
          )
        }
      </div>
    </a>
  </div>
  <div class="flex items-center leading-5 space-x-4 sm:space-x-6">
    {
      NAVIGATION.filter((link) => link.href !== "/").map((link) => (
        <HeaderLink
          href={link.href}
          class="hidden sm:block font-medium text-gray-900 dark:text-gray-100"
        >
          {link.title}
        </HeaderLink>
      ))
    }

    <!--TODO: add theme button-->
    <SearchButton />
    <ThemeSwitcher />
    <MobileNav />
  </div>
</header>
<SearchResult />
<script is:inline src="https://cdn.jsdelivr.net/npm/fuse.js/dist/fuse.js"
></script>
<script define:vars={{ searchList }}>
  function init() {
    const fuse = new Fuse(searchList, {
      keys: ["title", "summary"],
      includeMatches: true,
      minMatchCharLength: 2,
      threshold: 0.5,
    });
    const searchBg = document.getElementById("searchBg");
    const searchBtn = document.getElementById("searchBtn");
    const searchResult = document.querySelector(".pagefind-ui__drawer");
    const searchClear = document.querySelector(".pagefind-ui__search-clear");
    const searchInput = document.querySelector(".pagefind-ui__search-input");
    searchBg.addEventListener("click", (event) => {
      if (event.target?.getAttribute("id") === "searchBg") {
        searchBg.classList.toggle("hidden", true);
      }
    });

    searchBtn.addEventListener("click", () => {
      searchBg.classList.toggle("hidden", false);
    });

    searchClear.addEventListener("click", () => {
      searchInput.value = "";
      searchResult.classList.toggle("hidden", true);
    });

    searchInput?.addEventListener("input", async (e) => {
      searchResult.classList.toggle("hidden", e.target.value ? false : true);

      // search the index using the input value
      const results = e.target.value ? fuse.search(e.target.value) : [];
      const tips = results.length
        ? `${results.length} results for ${e.target.value}`
        : `No results for ${e.target.value}`;
      // clear the old results
      let resHTML = "";
      // add the new results
      for (const { item } of results) {
        resHTML += `
          <li class="pagefind-ui__result">
            <div class="pagefind-ui__result-inner">
              <p class="pagefind-ui__result-title">
                <a class="pagefind-ui__result-link" href="/blog/${item.slug}">${item.title}</a>
              </p>
              <p class="pagefind-ui__result-excerpt">${item.summary}</p>
            </div>
          </li>`;
      }
      searchResult.innerHTML = `
        <div class="pagefind-ui__results-area">
          <p class="pagefind-ui__message">${tips}</p>
          <ol class="pagefind-ui__results">${resHTML}</ol>
        </div>
      `;
    });
  }
  init();
  document.addEventListener("astro:after-swap", () => {
    init();
  });
</script>
